{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","Fragment","className","alt","src","CardList","cardArray","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","respone","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","letterSpacing","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAdF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACtB,OACI,cAAC,IAAMC,SAAP,UACI,sBAAKC,UAAU,qDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BJ,EAA1B,mBACrB,gCACI,6BAAKF,IACL,4BAAIC,aCWTM,EAjBE,SAAC,GAAc,IACtBC,EADqB,EAAZC,OACUC,KAAI,SAACC,EAAKC,GAC/B,OAAQ,cAAC,EAAD,CAERV,GAAIS,EAAKT,GACTF,KAAMW,EAAKX,KACXC,MAAOU,EAAKV,OAHPW,MAOT,OACI,cAAC,IAAMT,SAAP,UACKK,KCCEK,EAdG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,cAAC,IAAMZ,SAAP,UACI,qBAAKC,UAAU,MAAf,SACI,uBAAOA,UAAU,uBACjBY,KAAK,SACLC,YAAY,eACZC,SAAUH,SCCXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCkBJC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,oBAAIxB,UAAU,KAAd,sCAGJ2B,KAAKX,MAAMK,a,GAjBEQ,aC+CbC,G,wDAzCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAbzC,EAAKX,MAAM,CACPlB,OAAQ,GACRK,YAAa,IAJP,E,qDAQd,WAAoB,IAAD,OACfyB,MAAM,8CACDC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAQkC,S,oBAO9C,WACI,MAA8BZ,KAAKJ,MAA5BlB,EAAP,EAAOA,OAAQK,EAAf,EAAeA,YACT8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASlC,EAAYiC,kBAEzD,OAAQtC,EAAOwC,OAGX,cAAC,IAAM9C,SAAP,UACI,sBAAKC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAKiB,MAAO,CAAC6B,cAAe,UAA1C,yBACA,cAAC,EAAD,CAAWnC,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,aARlC,oBAAIxC,UAAU,QAAd,yB,GAzBM6B,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3fa89ac0.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name,email,id}) => {\n    return (\n        <React.Fragment>\n            <div className='tc bg-washed-red dib br3 pa3 ma2 grow bw2 shadow-5'>\n                <img alt='robots' src={`https://robohash.org/${id}?size=200x200`}/>\n                <div>\n                    <h2>{name}</h2>\n                    <p>{email}</p>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n    const cardArray = robots.map((user,i) => {\n        return (<Card \n        key={i} \n        id={user.id} \n        name={user.name} \n        email={user.email}\n        />\n        );\n    })\n    return(\n        <React.Fragment>\n            {cardArray}\n        </React.Fragment>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchField, searchChange}) =>{\n    return(\n        <React.Fragment>\n            <div className='pa2'>\n                <input className='pa3 ba bg-washed-red' \n                type='search' \n                placeholder='search robot'\n                onChange={searchChange}\n                />\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default SearchBox","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '705px'}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error,info){\n        this.setState({hasError: true});\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1 className='tc'>Oooops. That is not good</h1>\n        }\n\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport './App.css'\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state={\n            robots: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(respone => respone.json())\n            .then(users => this.setState({robots: users}))\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchField: event.target.value});\n    }\n\n    render(){\n        const {robots, searchField} = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        });\n        return !robots.length ?\n            <h1 className='tc f1'>Loading</h1> :\n        (\n            <React.Fragment>\n                <div className='tc'>\n                    <h1 className='f1' style={{letterSpacing: '0.5rem'}}>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}